[package]
name = "sqlx-tracing"
version = "0.1.0"
edition = "2024"
description = "OpenTelemetry-compatible tracing for SQLx database operations in Rust."
license = "MIT"
repository = "https://github.com/jdrouet/sqlx-tracing"
documentation = "https://docs.rs/sqlx-tracing"
homepage = "https://github.com/jdrouet/sqlx-tracing"
readme = "README.md"
authors = ["Jérémie Drouet <jeremie.drouet@gmail.com>"]
keywords = ["sqlx", "tracing", "opentelemetry", "database", "observability"]
categories = ["database", "development-tools::debugging", "development-tools::profiling", "asynchronous"]

[features]
default = []
postgres = ["sqlx/postgres"]
sqlite = ["sqlx/sqlite"]

[dependencies]
futures = { version = "0.3" }
sqlx = { version = "0.8", default-features = false, features = ["derive"] }
tracing = { version = "0.1" }

[dev-dependencies]
anyhow = "1"
opentelemetry = "0.30"
opentelemetry-otlp = { version = "0.30", features = ["grpc-tonic"] }
opentelemetry-semantic-conventions = "0.30"
opentelemetry_sdk = { version = "0.30", features = ["rt-tokio"] }
opentelemetry-appender-tracing = { version = "0.30", features = [
    "experimental_metadata_attributes",
    "experimental_use_tracing_span_context",
] }
serial_test = { version = "3.2" }
sqlx = { version = "0.8", features = ["runtime-tokio"] }
tempfile = "3.21"
testcontainers = "0.25"
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }
tracing-opentelemetry = "0.31"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
